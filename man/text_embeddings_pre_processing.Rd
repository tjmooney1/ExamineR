% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/text_embeddings_pre_processing.R
\name{text_embeddings_pre_processing}
\alias{text_embeddings_pre_processing}
\title{Clean Text Variable Ready for Embedding}
\usage{
text_embeddings_pre_processing(
  data,
  text_var,
  to_lower = TRUE,
  in_parallel = FALSE
)
}
\arguments{
\item{data}{A tibble or data frame object}

\item{text_var}{The text variable or documents to be cleaned for the embedding process}

\item{to_lower}{Whether to make text lowercase, the default option is TRUE}

\item{in_parallel}{Whether to utilize parallel processing and split the job across cores, in order to process faster. The default option is FALSE}
}
\value{
Returns the data object with the provided text_var cleaned and ready to begin embeddings
}
\description{
Clean Text Variable Ready for Embedding
}
\details{
The text_embeddings_pre_processing function is designed to prepare text data for embedding by performing various cleaning steps. #'It is particularly useful for pre-processing text before applying them to any natural language processing (NLP) or transformer model such as those hosted on Hugging Face and similar. The key cleaning steps include:
\itemize{
\item URLs: Removes most forms of URL.
\item Hashtags: Removes hashtags.
\item Mentions: Removes user mentions.
\item Emojis: Removes emojis from text.
\item Punctuation: Removes all punctuation.
\item Cleaning Digits: Removes any digits found at the very start of documents but not any others.
\item Removing Non-English Symbols: Excludes non-English symbols, preserving only alphanumeric characters, punctuation, and spaces.
\item Handling Multiple Spaces: Reduces consecutive spaces to a single space, addressing any excess spacing, wile also cleaning any spaces that may start documents.
}

The function provides the option to make all texts lower-case by calling to_lower = TRUE, as well as execute all of the above cleaning steps in parallel, by calling in_parallel = TRUE. This is typically performed to leverage multiple CPU cores for efficiency when working with slightly larger data sets with many documents. Overall, this serves as a versatile tool to enhance the quality of textual data before any further analysis or embedding is conducted.
}
\examples{
output <- data \%>\%
dplyr::mutate(message_cleaned = message) \%>\%
 text_embeddings_pre_processing(text_var = message_cleaned)
}
